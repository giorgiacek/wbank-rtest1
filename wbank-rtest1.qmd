---
title: "R Skills Assessment 1"
date: 2023-11-12
author: "Giorgia Cecchinato"
format:
  html:
    toc: true
    toc-location: right
    code-fold: true
---

```{r setup, include=FALSE}
library(fastverse)
library(readr)
library(rmarkdown)
library(DT)
library(stringr)
library(ggplot2)
library(purrr)
library(joyn)
```

## Data
Data for both assignment are loaded here.
```{r data}
tag      <- "202311081903"
base_url <- "https://github.com/randrescastaneda/pub_data/raw/"
data_url <- paste0(base_url, tag, "/data/Rtest1/")

wdi <-
  readr::read_rds(paste0(data_url, "wdi_in1.Rds"))

l_svy <- 
  readr::read_rds(paste0(data_url, "svy_sim_in1.Rds"))
```

## Basic Stats

### 1. Summary statistics of GDP per capita by region

This table shows some stats of GDP per capita by region and year. Total number of observations (not-weighted), mean, sd, min, and max.

```{r basic summary-stats}
wdi |> 
  fgroup_by(region, date) |>
  fsummarise(
    N = fnobs(gdp),
    mean = fmean(gdp, w = pop, na.rm=TRUE),
    SD = fsd(gdp, w = pop, na.rm=TRUE),
    Min = fmin(gdp, na.rm=TRUE),
    Max = fmax(gdp, na.rm=TRUE)
  ) |>
  datatable(
    filter = 'top', options = list(
  pageLength = 10, autoWidth = TRUE
)) |>
  formatRound(c('mean', 'SD', 'Min', 'Max'), 0)
```

### 2. Aggregate stats

In this table, I aggregate the `lifeex`, `gdp`, and `pov_intl` variables by `region` and `date`, using the mean, standard deviation, minimum, maximum, and median.

```{r basic aggregate-stats}
#| warning: false

wdi |>
  fselect(region, date, lifeex, gdp, pov_intl, pop) |>
  fgroup_by(region, date) |>
  fsummarise(across(c(lifeex, gdp, pov_intl), 
                    list(mean = fmean, sd = fsd, min = fmin, max = fmax), 
                    w = pop),
             pop = fsum(pop)) |>
  pivot(ids = c('region', 'date', 'pop'),
        values = c('lifeex_mean', 'lifeex_sd', 'lifeex_min', 'lifeex_max', 
                 'gdp_mean', 'gdp_sd', 'gdp_min', 'gdp_max', 
                 'pov_intl_mean', 'pov_intl_sd', 'pov_intl_min', 'pov_intl_max')) |>
  fmutate(variable2 = str_extract(variable, ".*?(?=_[^_]+$)"),
          estimate = str_extract(variable, "(mean|sd|min|max)$")) |>
  fselect(-variable) |>
  pivot(how = "wider",
        ids = c('region', 'date', 'estimate', 'pop'),
        names = c('variable2'),
        values = c('value')) |>
  fselect(estimate, region, date, pop, lifeex, gdp, pov_intl) |>
  DT::datatable(
    filter = 'top', options = list(
  pageLength = 10, autoWidth = TRUE
)) |>
  formatRound(c('lifeex', 'gdp', 'pov_intl'), 3)
```

### 3. Find Outliers
Here I find the outliers of `lifeex`, `gpd`, and `gini` by year above and below 2.5 standard deviations from the mean.

```{r basic outliers}
#| warning: false
#| message: false

# 1. Find yearly stats
yearly_stats <- wdi|>
  fgroup_by(date) |>
  fsummarise(
    mean_lifeex = fmean(lifeex, na.rm = TRUE, w = pop),
    sd_lifeex = fsd(lifeex, na.rm = TRUE, w = pop),
    mean_gdp = fmean(gdp, na.rm = TRUE, w = pop),
    sd_gdp = fsd(gdp, na.rm = TRUE, w = pop),
    mean_gini = fmean(gini, na.rm = TRUE, w = pop),
    sd_gini = fsd(gini, na.rm = TRUE, w = pop)
  )

# 2. Create outlier function
is_low_outlier <- function(value, mean, sd) {
  threshold = mean - 2.5 * sd
  return(value < threshold)
}

is_high_outlier <- function(value, mean, sd) {
  threshold = mean + 2.5 * sd
  return(value > threshold)
}

# 3. Find outliers
wdi_outliers <- wdi |>
  joyn::merge(yearly_stats, by = "date", verbose = FALSE) |> # had to try your package!
  fmutate(
    hl_lifeex = ifelse(!is.na(lifeex), is_high_outlier(lifeex, mean_lifeex, sd_lifeex), NA),
    ll_lifeex = ifelse(!is.na(lifeex), is_low_outlier(lifeex, mean_lifeex, sd_lifeex), NA),
    hl_gdp = ifelse(!is.na(gdp), is_high_outlier(gdp, mean_gdp, sd_gdp), NA),
    ll_gdp = ifelse(!is.na(gdp), is_low_outlier(gdp, mean_gdp, sd_gdp), NA),
    hl_gini = ifelse(!is.na(gini), is_high_outlier(gini, mean_gini, sd_gini), NA),
    ll_gini = ifelse(!is.na(gini), is_low_outlier(gini, mean_gini, sd_gini), NA)
  )

wdi_outliers |>
  fselect(date, region, lifeex, hl_lifeex, ll_lifeex, gdp, hl_gdp, ll_gdp, gini, hl_gini, ll_gini) |>
  DT::datatable(
    filter = 'top', options = list(
  pageLength = 5, autoWidth = TRUE
)) |>
  formatRound(c('lifeex', 'gdp', 'gini'), 3)

```

And this graph shows the outliers of `lifeex` by year.

```{r basic outliers graph}
wdi_outliers |>
  ggplot() +
  geom_point(aes(x = date, y = lifeex, color = region), size = 1) +
  geom_line(aes(x = date, y = mean_lifeex), linewidth = 0.5, colour = 'blue') +
  geom_ribbon(aes(x = date, ymin = mean_lifeex - sd_lifeex*2.5, 
                  ymax = mean_lifeex + sd_lifeex*2.5), alpha = 0.2)+
  theme_minimal()+
  labs(x = "Date", y = "Life Exp", color = NULL) +
  theme(legend.position=c(.5,.15), legend.direction = "horizontal")
```

